message(STATUS "******* In ConanInstall.cmake *********" )
include("${CMAKE_SOURCE_DIR}/cmake/conan.cmake")
conan_cmake_autodetect(settings)
foreach (pair IN LISTS settings)
    string(FIND "${pair}" "=" pos)
    if (pos LESS 1)
        message(WARNING "Skipping setting: ${pair}")
    else()
        string(SUBSTRING "${pair}" 0 "${pos}" var)
        string(SUBSTRING "${pair}" 0 "${pos}" var)
        math(EXPR pos "${pos} + 1")
        string(SUBSTRING "${pair}" "${pos}" -1 val)
        message(STATUS "${var} *** ${val}")
        if ("${var}" STREQUAL "arch")
            set(profile_arch "${val}")
        endif()
        if ("${var}" STREQUAL "compiler")
            set(profile_compiler "${val}")
        endif()
        if ("${var}" STREQUAL "compiler.version")
            set(profile_compiler_version "${val}")
        endif()
        if ("${var}" STREQUAL "build_type")
            set(profile_build_type "${val}")
        endif()
        if ("${var}" STREQUAL "compiler.runtime")
            set(profile_compiler_runtime "${val}")
        endif()
        if ("${var}" STREQUAL "compiler.libcxx")
            set(profile_compiler_libcxx "${val}")
        endif()
    endif()
endforeach()

if (CMAKE_HOST_SYSTEM_NAME STREQUAL "Darwin")
    set(profile_os "Macos")
else()
    set(profile_os "${CMAKE_HOST_SYSTEM_NAME}")
    if(CMAKE_HOST_SYSTEM_NAME STREQUAL "Linux")
        set(profile_arch "x86_64")
    endif()
endif()
# separate windows and macos/linus
if (CMAKE_HOST_SYSTEM_NAME STREQUAL "Windows")
    configure_file(${CMAKE_SOURCE_DIR}/cmake/install_profile.in ${CMAKE_BINARY_DIR}/install_profile)
else()
    configure_file(${CMAKE_SOURCE_DIR}/cmake/install_profile_nowin.in ${CMAKE_BINARY_DIR}/install_profile)
endif()
conan_cmake_install(PATH_OR_REFERENCE ../conanfile.py SETTINGS build_type=Release PROFILE_BUILD ${CMAKE_BINARY_DIR}/install_profile)